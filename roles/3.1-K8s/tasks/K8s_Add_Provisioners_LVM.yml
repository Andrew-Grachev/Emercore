---

- name: Чтение статуса 'LVM'
  shell: kubectl get pods -n csi-lvm-system | grep 'lvm'
  register: status_lvm
  become: false
  ignore_errors: yes

- name:
  block:
  
  - name: Создание пространства имен для 'LVM provisioner'
    kubernetes.core.k8s:
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: "{{ k8s.lvm_provisioner.namespace }}"
          labels:
            pod-security.kubernetes.io/enforce: privileged
      state: present

  - name: Создание LVM provisioner CSIDriver
    kubernetes.core.k8s:
      state: present
      force: no
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition: "{{ lookup('template', 'lvm_common.yaml') }}"

  - name: Создание LVM provisioner controller deployment
    kubernetes.core.k8s:
      state: present
      force: no
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition: "{{ lookup('template', 'lvm_controller.yaml') }}"

  - name: Создание LVM provisioner plugin deployment
    kubernetes.core.k8s:
      state: present
      force: no
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition: "{{ lookup('template', 'lvm_plugin.yaml') }}"

  - name: Создание LVM provisioner StorageClass
    kubernetes.core.k8s:
      state: present
      force: no
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition: "{{ lookup('template', 'lvm_storageclass.yaml') }}"

  when:
    - k8s.lvm_provisioner.namespace == "csi-lvm-system"
    - status_lvm.stdout == ''

...